apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: go-gin-microservice
  title: Go Gin Microservice
  description: A Go Gin microservice with OpenAPI and AsyncAPI stubs that deploys to EKS.
  tags:
    - go
    - gin
    - openapi
    - asyncapi
    - k8s
spec:
  owner: david.herod@lab49.com
  type: service

  parameters:
    - title: Provide values to configure the generated project
      required:
        - component_id
        - owner
        - go_module_name
      properties:
        component_id:
          title: Component ID
          type: string
          description: Unique name of the application
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this application is for.
        go_module_name:
          title: Go Module Name
          type: string
          description: The Go module to be created eg (github.com/lab49-poc)
          value: github.com/lab49-poc
        open_api_spec:
          title: OpenAPI Spec
          type: string
          description: The OpenAPI spec to be used to generate the API stubs.
          ui:widget: "textarea"
          ui:options:
            rows: 10
        async_api_spec:
          title: AsyncAPI Spec
          type: string
          description: The AsyncAPI spec to be used to generate the API stubs.
          ui:widget: "textarea"
          ui:options:
            rows: 10
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Configure Code Repository
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          open_api_spec: ${{ parameters.open_api_spec }}
          async_api_spec: ${{ parameters.async_api_spec }}
          artifact_id: ${{ parameters.component_id }}
          go_module_name: ${{ parameters.go_module_name }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          http_port: 8080

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
